<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20243.24.1010.1014                               -->
<workbook original-version='18.1' source-build='2024.3.0 (20243.24.1010.1014)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <AccessibleZoneTabOrder />
    <AnimationOnByDefault />
    <IntuitiveSorting />
    <IntuitiveSorting_SP2 />
    <MarkAnimation />
    <ObjectModelEncapsulateLegacy />
    <ObjectModelExtractV2 />
    <ObjectModelTableType />
    <SchemaViewerObjectModel />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <_.fcp.VConnDownstreamExtractsWithWarnings.true...VConnDownstreamExtractsWithWarnings />
    <WindowsPersistSimpleIdentifiers />
    <WorksheetBackgroundTransparency />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='cleaned_transjakarta' inline='true' name='federated.1schfk01iwhnpb130bk981sidxvv' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='cleaned_transjakarta' name='textscan.0pyawai07dopi315uqz070yq6k97'>
            <connection class='textscan' directory='C:/Users/Debi/Downloads' filename='cleaned_transjakarta.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <relation connection='textscan.0pyawai07dopi315uqz070yq6k97' name='cleaned_transjakarta.csv' table='[cleaned_transjakarta#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_ID' separator=','>
            <column datatype='string' name='transID' ordinal='0' />
            <column datatype='integer' name='payCardID' ordinal='1' />
            <column datatype='string' name='payCardBank' ordinal='2' />
            <column datatype='string' name='payCardName' ordinal='3' />
            <column datatype='string' name='payCardSex' ordinal='4' />
            <column datatype='integer' name='payCardBirthDate' ordinal='5' />
            <column datatype='string' name='corridorID' ordinal='6' />
            <column datatype='string' name='corridorName' ordinal='7' />
            <column datatype='real' name='direction' ordinal='8' />
            <column datatype='string' name='tapInStops' ordinal='9' />
            <column datatype='string' name='tapInStopsName' ordinal='10' />
            <column datatype='real' name='tapInStopsLat' ordinal='11' />
            <column datatype='real' name='tapInStopsLon' ordinal='12' />
            <column datatype='integer' name='stopStartSeq' ordinal='13' />
            <column datatype='datetime' name='tapInTime' ordinal='14' />
            <column datatype='string' name='tapOutStops' ordinal='15' />
            <column datatype='string' name='tapOutStopsName' ordinal='16' />
            <column datatype='real' name='tapOutStopsLat' ordinal='17' />
            <column datatype='real' name='tapOutStopsLon' ordinal='18' />
            <column datatype='real' name='stopEndSeq' ordinal='19' />
            <column datatype='datetime' name='tapOutTime' ordinal='20' />
            <column datatype='real' name='payAmount' ordinal='21' />
            <column datatype='string' name='tapDay' ordinal='22' />
            <column datatype='integer' name='payCardAge' ordinal='23' />
            <column datatype='integer' name='tapInHour' ordinal='24' />
            <column datatype='integer' name='tapOutHour' ordinal='25' />
            <column datatype='real' name='travelDuration' ordinal='26' />
            <column datatype='real' name='distance_km' ordinal='27' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[cleaned_transjakarta.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='currency'>&quot;IDR&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_ID&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>transID</remote-name>
            <remote-type>129</remote-type>
            <local-name>[transID]</local-name>
            <parent-name>[cleaned_transjakarta.csv]</parent-name>
            <remote-alias>transID</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <object-id>[cleaned_transjakarta.csv_85D9D5A9AA4D4D2495EDEB192D73667F]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>payCardID</remote-name>
            <remote-type>20</remote-type>
            <local-name>[payCardID]</local-name>
            <parent-name>[cleaned_transjakarta.csv]</parent-name>
            <remote-alias>payCardID</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[cleaned_transjakarta.csv_85D9D5A9AA4D4D2495EDEB192D73667F]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>payCardBank</remote-name>
            <remote-type>129</remote-type>
            <local-name>[payCardBank]</local-name>
            <parent-name>[cleaned_transjakarta.csv]</parent-name>
            <remote-alias>payCardBank</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <object-id>[cleaned_transjakarta.csv_85D9D5A9AA4D4D2495EDEB192D73667F]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>payCardName</remote-name>
            <remote-type>129</remote-type>
            <local-name>[payCardName]</local-name>
            <parent-name>[cleaned_transjakarta.csv]</parent-name>
            <remote-alias>payCardName</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <object-id>[cleaned_transjakarta.csv_85D9D5A9AA4D4D2495EDEB192D73667F]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>payCardSex</remote-name>
            <remote-type>129</remote-type>
            <local-name>[payCardSex]</local-name>
            <parent-name>[cleaned_transjakarta.csv]</parent-name>
            <remote-alias>payCardSex</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <object-id>[cleaned_transjakarta.csv_85D9D5A9AA4D4D2495EDEB192D73667F]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>payCardBirthDate</remote-name>
            <remote-type>20</remote-type>
            <local-name>[payCardBirthDate]</local-name>
            <parent-name>[cleaned_transjakarta.csv]</parent-name>
            <remote-alias>payCardBirthDate</remote-alias>
            <ordinal>5</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[cleaned_transjakarta.csv_85D9D5A9AA4D4D2495EDEB192D73667F]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>corridorID</remote-name>
            <remote-type>129</remote-type>
            <local-name>[corridorID]</local-name>
            <parent-name>[cleaned_transjakarta.csv]</parent-name>
            <remote-alias>corridorID</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <object-id>[cleaned_transjakarta.csv_85D9D5A9AA4D4D2495EDEB192D73667F]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>corridorName</remote-name>
            <remote-type>129</remote-type>
            <local-name>[corridorName]</local-name>
            <parent-name>[cleaned_transjakarta.csv]</parent-name>
            <remote-alias>corridorName</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <object-id>[cleaned_transjakarta.csv_85D9D5A9AA4D4D2495EDEB192D73667F]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>direction</remote-name>
            <remote-type>5</remote-type>
            <local-name>[direction]</local-name>
            <parent-name>[cleaned_transjakarta.csv]</parent-name>
            <remote-alias>direction</remote-alias>
            <ordinal>8</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[cleaned_transjakarta.csv_85D9D5A9AA4D4D2495EDEB192D73667F]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>tapInStops</remote-name>
            <remote-type>129</remote-type>
            <local-name>[tapInStops]</local-name>
            <parent-name>[cleaned_transjakarta.csv]</parent-name>
            <remote-alias>tapInStops</remote-alias>
            <ordinal>9</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <object-id>[cleaned_transjakarta.csv_85D9D5A9AA4D4D2495EDEB192D73667F]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>tapInStopsName</remote-name>
            <remote-type>129</remote-type>
            <local-name>[tapInStopsName]</local-name>
            <parent-name>[cleaned_transjakarta.csv]</parent-name>
            <remote-alias>tapInStopsName</remote-alias>
            <ordinal>10</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <object-id>[cleaned_transjakarta.csv_85D9D5A9AA4D4D2495EDEB192D73667F]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>tapInStopsLat</remote-name>
            <remote-type>5</remote-type>
            <local-name>[tapInStopsLat]</local-name>
            <parent-name>[cleaned_transjakarta.csv]</parent-name>
            <remote-alias>tapInStopsLat</remote-alias>
            <ordinal>11</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[cleaned_transjakarta.csv_85D9D5A9AA4D4D2495EDEB192D73667F]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>tapInStopsLon</remote-name>
            <remote-type>5</remote-type>
            <local-name>[tapInStopsLon]</local-name>
            <parent-name>[cleaned_transjakarta.csv]</parent-name>
            <remote-alias>tapInStopsLon</remote-alias>
            <ordinal>12</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[cleaned_transjakarta.csv_85D9D5A9AA4D4D2495EDEB192D73667F]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>stopStartSeq</remote-name>
            <remote-type>20</remote-type>
            <local-name>[stopStartSeq]</local-name>
            <parent-name>[cleaned_transjakarta.csv]</parent-name>
            <remote-alias>stopStartSeq</remote-alias>
            <ordinal>13</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[cleaned_transjakarta.csv_85D9D5A9AA4D4D2495EDEB192D73667F]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>tapInTime</remote-name>
            <remote-type>135</remote-type>
            <local-name>[tapInTime]</local-name>
            <parent-name>[cleaned_transjakarta.csv]</parent-name>
            <remote-alias>tapInTime</remote-alias>
            <ordinal>14</ordinal>
            <local-type>datetime</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <object-id>[cleaned_transjakarta.csv_85D9D5A9AA4D4D2495EDEB192D73667F]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>tapOutStops</remote-name>
            <remote-type>129</remote-type>
            <local-name>[tapOutStops]</local-name>
            <parent-name>[cleaned_transjakarta.csv]</parent-name>
            <remote-alias>tapOutStops</remote-alias>
            <ordinal>15</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <object-id>[cleaned_transjakarta.csv_85D9D5A9AA4D4D2495EDEB192D73667F]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>tapOutStopsName</remote-name>
            <remote-type>129</remote-type>
            <local-name>[tapOutStopsName]</local-name>
            <parent-name>[cleaned_transjakarta.csv]</parent-name>
            <remote-alias>tapOutStopsName</remote-alias>
            <ordinal>16</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <object-id>[cleaned_transjakarta.csv_85D9D5A9AA4D4D2495EDEB192D73667F]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>tapOutStopsLat</remote-name>
            <remote-type>5</remote-type>
            <local-name>[tapOutStopsLat]</local-name>
            <parent-name>[cleaned_transjakarta.csv]</parent-name>
            <remote-alias>tapOutStopsLat</remote-alias>
            <ordinal>17</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[cleaned_transjakarta.csv_85D9D5A9AA4D4D2495EDEB192D73667F]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>tapOutStopsLon</remote-name>
            <remote-type>5</remote-type>
            <local-name>[tapOutStopsLon]</local-name>
            <parent-name>[cleaned_transjakarta.csv]</parent-name>
            <remote-alias>tapOutStopsLon</remote-alias>
            <ordinal>18</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[cleaned_transjakarta.csv_85D9D5A9AA4D4D2495EDEB192D73667F]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>stopEndSeq</remote-name>
            <remote-type>5</remote-type>
            <local-name>[stopEndSeq]</local-name>
            <parent-name>[cleaned_transjakarta.csv]</parent-name>
            <remote-alias>stopEndSeq</remote-alias>
            <ordinal>19</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[cleaned_transjakarta.csv_85D9D5A9AA4D4D2495EDEB192D73667F]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>tapOutTime</remote-name>
            <remote-type>135</remote-type>
            <local-name>[tapOutTime]</local-name>
            <parent-name>[cleaned_transjakarta.csv]</parent-name>
            <remote-alias>tapOutTime</remote-alias>
            <ordinal>20</ordinal>
            <local-type>datetime</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <object-id>[cleaned_transjakarta.csv_85D9D5A9AA4D4D2495EDEB192D73667F]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>payAmount</remote-name>
            <remote-type>5</remote-type>
            <local-name>[payAmount]</local-name>
            <parent-name>[cleaned_transjakarta.csv]</parent-name>
            <remote-alias>payAmount</remote-alias>
            <ordinal>21</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[cleaned_transjakarta.csv_85D9D5A9AA4D4D2495EDEB192D73667F]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>tapDay</remote-name>
            <remote-type>129</remote-type>
            <local-name>[tapDay]</local-name>
            <parent-name>[cleaned_transjakarta.csv]</parent-name>
            <remote-alias>tapDay</remote-alias>
            <ordinal>22</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <object-id>[cleaned_transjakarta.csv_85D9D5A9AA4D4D2495EDEB192D73667F]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>payCardAge</remote-name>
            <remote-type>20</remote-type>
            <local-name>[payCardAge]</local-name>
            <parent-name>[cleaned_transjakarta.csv]</parent-name>
            <remote-alias>payCardAge</remote-alias>
            <ordinal>23</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[cleaned_transjakarta.csv_85D9D5A9AA4D4D2495EDEB192D73667F]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>tapInHour</remote-name>
            <remote-type>20</remote-type>
            <local-name>[tapInHour]</local-name>
            <parent-name>[cleaned_transjakarta.csv]</parent-name>
            <remote-alias>tapInHour</remote-alias>
            <ordinal>24</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[cleaned_transjakarta.csv_85D9D5A9AA4D4D2495EDEB192D73667F]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>tapOutHour</remote-name>
            <remote-type>20</remote-type>
            <local-name>[tapOutHour]</local-name>
            <parent-name>[cleaned_transjakarta.csv]</parent-name>
            <remote-alias>tapOutHour</remote-alias>
            <ordinal>25</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[cleaned_transjakarta.csv_85D9D5A9AA4D4D2495EDEB192D73667F]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>travelDuration</remote-name>
            <remote-type>5</remote-type>
            <local-name>[travelDuration]</local-name>
            <parent-name>[cleaned_transjakarta.csv]</parent-name>
            <remote-alias>travelDuration</remote-alias>
            <ordinal>26</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[cleaned_transjakarta.csv_85D9D5A9AA4D4D2495EDEB192D73667F]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>distance_km</remote-name>
            <remote-type>5</remote-type>
            <local-name>[distance_km]</local-name>
            <parent-name>[cleaned_transjakarta.csv]</parent-name>
            <remote-alias>distance_km</remote-alias>
            <ordinal>27</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[cleaned_transjakarta.csv_85D9D5A9AA4D4D2495EDEB192D73667F]</object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='cleaned_transjakarta.csv' datatype='table' name='[__tableau_internal_object_id__].[cleaned_transjakarta.csv_85D9D5A9AA4D4D2495EDEB192D73667F]' role='measure' type='quantitative' />
      <column caption='Corridor ID' datatype='string' name='[corridorID]' role='dimension' type='nominal' />
      <column caption='Corridor Name' datatype='string' name='[corridorName]' role='dimension' type='nominal' />
      <column caption='Direction' datatype='real' name='[direction]' role='measure' type='quantitative' />
      <column caption='Distance Km' datatype='real' name='[distance_km]' role='measure' type='quantitative' />
      <column caption='Pay Amount' datatype='real' name='[payAmount]' role='measure' type='quantitative' />
      <column caption='Pay Card Age' datatype='integer' name='[payCardAge]' role='measure' type='quantitative' />
      <column caption='Pay Card Bank' datatype='string' name='[payCardBank]' role='dimension' type='nominal' />
      <column caption='Pay Card Birth Date' datatype='integer' name='[payCardBirthDate]' role='measure' type='quantitative' />
      <column caption='Pay Card ID' datatype='integer' name='[payCardID]' role='dimension' type='ordinal' />
      <column caption='Pay Card Name' datatype='string' name='[payCardName]' role='dimension' type='nominal' />
      <column caption='Pay Card Sex' datatype='string' name='[payCardSex]' role='dimension' type='nominal' />
      <column caption='Stop End Seq' datatype='real' name='[stopEndSeq]' role='measure' type='quantitative' />
      <column caption='Stop Start Seq' datatype='integer' name='[stopStartSeq]' role='measure' type='quantitative' />
      <column caption='Tap Day' datatype='string' name='[tapDay]' role='dimension' type='nominal' />
      <column caption='Tap In Hour' datatype='integer' name='[tapInHour]' role='measure' type='quantitative' />
      <column caption='Tap In Stops Lat' datatype='real' name='[tapInStopsLat]' role='measure' type='quantitative' />
      <column caption='Tap In Stops Lon' datatype='real' name='[tapInStopsLon]' role='measure' type='quantitative' />
      <column caption='Tap In Stops Name' datatype='string' name='[tapInStopsName]' role='dimension' type='nominal' />
      <column caption='Tap In Stops' datatype='string' name='[tapInStops]' role='dimension' type='nominal' />
      <column caption='Tap In Time' datatype='datetime' name='[tapInTime]' role='dimension' type='ordinal' />
      <column caption='Tap Out Hour' datatype='integer' name='[tapOutHour]' role='measure' type='quantitative' />
      <column caption='Tap Out Stops Lat' datatype='real' name='[tapOutStopsLat]' role='measure' type='quantitative' />
      <column caption='Tap Out Stops Lon' datatype='real' name='[tapOutStopsLon]' role='measure' type='quantitative' />
      <column caption='Tap Out Stops Name' datatype='string' name='[tapOutStopsName]' role='dimension' type='nominal' />
      <column caption='Tap Out Stops' datatype='string' name='[tapOutStops]' role='dimension' type='nominal' />
      <column caption='Tap Out Time' datatype='datetime' name='[tapOutTime]' role='dimension' type='ordinal' />
      <column caption='Trans ID' datatype='string' name='[transID]' role='dimension' type='nominal' />
      <column caption='Travel Duration' datatype='real' name='[travelDuration]' role='measure' type='quantitative' />
      <extract _.fcp.VConnDownstreamExtractsWithWarnings.true...user-specific='false' count='-1' enabled='true' object-id='' units='records'>
        <connection access_mode='readonly' author-locale='en_US' class='hyper' dbname='C:/Users/Debi/AppData/Local/Temp/TableauTemp/#TableauTemp_024yzsh0bjwqxw19ufikh1s58nk3.hyper' default-settings='hyper' schema='Extract' sslmode='' tablename='Extract' update-time='04/28/2025 03:27:32 PM' username='tableau_internal_user'>
          <relation name='Extract' table='[Extract].[Extract]' type='table' />
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>transID</remote-name>
              <remote-type>129</remote-type>
              <local-name>[transID]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>transID</remote-alias>
              <ordinal>0</ordinal>
              <family>cleaned_transjakarta.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>30800</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <object-id>[cleaned_transjakarta.csv_85D9D5A9AA4D4D2495EDEB192D73667F]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>payCardID</remote-name>
              <remote-type>20</remote-type>
              <local-name>[payCardID]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>payCardID</remote-alias>
              <ordinal>1</ordinal>
              <family>cleaned_transjakarta.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>2496</approx-count>
              <contains-null>true</contains-null>
              <object-id>[cleaned_transjakarta.csv_85D9D5A9AA4D4D2495EDEB192D73667F]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>payCardBank</remote-name>
              <remote-type>129</remote-type>
              <local-name>[payCardBank]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>payCardBank</remote-alias>
              <ordinal>2</ordinal>
              <family>cleaned_transjakarta.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>6</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <object-id>[cleaned_transjakarta.csv_85D9D5A9AA4D4D2495EDEB192D73667F]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>payCardName</remote-name>
              <remote-type>129</remote-type>
              <local-name>[payCardName]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>payCardName</remote-alias>
              <ordinal>3</ordinal>
              <family>cleaned_transjakarta.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>2490</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <object-id>[cleaned_transjakarta.csv_85D9D5A9AA4D4D2495EDEB192D73667F]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>payCardSex</remote-name>
              <remote-type>129</remote-type>
              <local-name>[payCardSex]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>payCardSex</remote-alias>
              <ordinal>4</ordinal>
              <family>cleaned_transjakarta.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>2</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <object-id>[cleaned_transjakarta.csv_85D9D5A9AA4D4D2495EDEB192D73667F]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>payCardBirthDate</remote-name>
              <remote-type>20</remote-type>
              <local-name>[payCardBirthDate]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>payCardBirthDate</remote-alias>
              <ordinal>5</ordinal>
              <family>cleaned_transjakarta.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>85</approx-count>
              <contains-null>true</contains-null>
              <object-id>[cleaned_transjakarta.csv_85D9D5A9AA4D4D2495EDEB192D73667F]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>corridorID</remote-name>
              <remote-type>129</remote-type>
              <local-name>[corridorID]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>corridorID</remote-alias>
              <ordinal>6</ordinal>
              <family>cleaned_transjakarta.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>284</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <object-id>[cleaned_transjakarta.csv_85D9D5A9AA4D4D2495EDEB192D73667F]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>corridorName</remote-name>
              <remote-type>129</remote-type>
              <local-name>[corridorName]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>corridorName</remote-alias>
              <ordinal>7</ordinal>
              <family>cleaned_transjakarta.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>273</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <object-id>[cleaned_transjakarta.csv_85D9D5A9AA4D4D2495EDEB192D73667F]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>direction</remote-name>
              <remote-type>5</remote-type>
              <local-name>[direction]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>direction</remote-alias>
              <ordinal>8</ordinal>
              <family>cleaned_transjakarta.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>2</approx-count>
              <contains-null>true</contains-null>
              <object-id>[cleaned_transjakarta.csv_85D9D5A9AA4D4D2495EDEB192D73667F]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>tapInStops</remote-name>
              <remote-type>129</remote-type>
              <local-name>[tapInStops]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>tapInStops</remote-alias>
              <ordinal>9</ordinal>
              <family>cleaned_transjakarta.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>2699</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <object-id>[cleaned_transjakarta.csv_85D9D5A9AA4D4D2495EDEB192D73667F]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>tapInStopsName</remote-name>
              <remote-type>129</remote-type>
              <local-name>[tapInStopsName]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>tapInStopsName</remote-alias>
              <ordinal>10</ordinal>
              <family>cleaned_transjakarta.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>2699</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <object-id>[cleaned_transjakarta.csv_85D9D5A9AA4D4D2495EDEB192D73667F]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>tapInStopsLat</remote-name>
              <remote-type>5</remote-type>
              <local-name>[tapInStopsLat]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>tapInStopsLat</remote-alias>
              <ordinal>11</ordinal>
              <family>cleaned_transjakarta.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>2679</approx-count>
              <contains-null>true</contains-null>
              <object-id>[cleaned_transjakarta.csv_85D9D5A9AA4D4D2495EDEB192D73667F]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>tapInStopsLon</remote-name>
              <remote-type>5</remote-type>
              <local-name>[tapInStopsLon]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>tapInStopsLon</remote-alias>
              <ordinal>12</ordinal>
              <family>cleaned_transjakarta.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>2628</approx-count>
              <contains-null>true</contains-null>
              <object-id>[cleaned_transjakarta.csv_85D9D5A9AA4D4D2495EDEB192D73667F]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>stopStartSeq</remote-name>
              <remote-type>20</remote-type>
              <local-name>[stopStartSeq]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>stopStartSeq</remote-alias>
              <ordinal>13</ordinal>
              <family>cleaned_transjakarta.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>91</approx-count>
              <contains-null>true</contains-null>
              <object-id>[cleaned_transjakarta.csv_85D9D5A9AA4D4D2495EDEB192D73667F]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>tapInTime</remote-name>
              <remote-type>135</remote-type>
              <local-name>[tapInTime]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>tapInTime</remote-alias>
              <ordinal>14</ordinal>
              <family>cleaned_transjakarta.csv</family>
              <local-type>datetime</local-type>
              <aggregation>Year</aggregation>
              <approx-count>30800</approx-count>
              <contains-null>true</contains-null>
              <object-id>[cleaned_transjakarta.csv_85D9D5A9AA4D4D2495EDEB192D73667F]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>tapOutStops</remote-name>
              <remote-type>129</remote-type>
              <local-name>[tapOutStops]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>tapOutStops</remote-alias>
              <ordinal>15</ordinal>
              <family>cleaned_transjakarta.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>2618</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <object-id>[cleaned_transjakarta.csv_85D9D5A9AA4D4D2495EDEB192D73667F]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>tapOutStopsName</remote-name>
              <remote-type>129</remote-type>
              <local-name>[tapOutStopsName]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>tapOutStopsName</remote-alias>
              <ordinal>16</ordinal>
              <family>cleaned_transjakarta.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>2618</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <object-id>[cleaned_transjakarta.csv_85D9D5A9AA4D4D2495EDEB192D73667F]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>tapOutStopsLat</remote-name>
              <remote-type>5</remote-type>
              <local-name>[tapOutStopsLat]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>tapOutStopsLat</remote-alias>
              <ordinal>17</ordinal>
              <family>cleaned_transjakarta.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>2599</approx-count>
              <contains-null>true</contains-null>
              <object-id>[cleaned_transjakarta.csv_85D9D5A9AA4D4D2495EDEB192D73667F]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>tapOutStopsLon</remote-name>
              <remote-type>5</remote-type>
              <local-name>[tapOutStopsLon]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>tapOutStopsLon</remote-alias>
              <ordinal>18</ordinal>
              <family>cleaned_transjakarta.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>2567</approx-count>
              <contains-null>true</contains-null>
              <object-id>[cleaned_transjakarta.csv_85D9D5A9AA4D4D2495EDEB192D73667F]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>stopEndSeq</remote-name>
              <remote-type>5</remote-type>
              <local-name>[stopEndSeq]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>stopEndSeq</remote-alias>
              <ordinal>19</ordinal>
              <family>cleaned_transjakarta.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>86</approx-count>
              <contains-null>true</contains-null>
              <object-id>[cleaned_transjakarta.csv_85D9D5A9AA4D4D2495EDEB192D73667F]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>tapOutTime</remote-name>
              <remote-type>135</remote-type>
              <local-name>[tapOutTime]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>tapOutTime</remote-alias>
              <ordinal>20</ordinal>
              <family>cleaned_transjakarta.csv</family>
              <local-type>datetime</local-type>
              <aggregation>Year</aggregation>
              <approx-count>29333</approx-count>
              <contains-null>true</contains-null>
              <object-id>[cleaned_transjakarta.csv_85D9D5A9AA4D4D2495EDEB192D73667F]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>payAmount</remote-name>
              <remote-type>5</remote-type>
              <local-name>[payAmount]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>payAmount</remote-alias>
              <ordinal>21</ordinal>
              <family>cleaned_transjakarta.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>3</approx-count>
              <contains-null>true</contains-null>
              <object-id>[cleaned_transjakarta.csv_85D9D5A9AA4D4D2495EDEB192D73667F]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>tapDay</remote-name>
              <remote-type>129</remote-type>
              <local-name>[tapDay]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>tapDay</remote-alias>
              <ordinal>22</ordinal>
              <family>cleaned_transjakarta.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>7</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <object-id>[cleaned_transjakarta.csv_85D9D5A9AA4D4D2495EDEB192D73667F]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>payCardAge</remote-name>
              <remote-type>20</remote-type>
              <local-name>[payCardAge]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>payCardAge</remote-alias>
              <ordinal>23</ordinal>
              <family>cleaned_transjakarta.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>85</approx-count>
              <contains-null>true</contains-null>
              <object-id>[cleaned_transjakarta.csv_85D9D5A9AA4D4D2495EDEB192D73667F]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>tapInHour</remote-name>
              <remote-type>20</remote-type>
              <local-name>[tapInHour]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>tapInHour</remote-alias>
              <ordinal>24</ordinal>
              <family>cleaned_transjakarta.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>17</approx-count>
              <contains-null>true</contains-null>
              <object-id>[cleaned_transjakarta.csv_85D9D5A9AA4D4D2495EDEB192D73667F]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>tapOutHour</remote-name>
              <remote-type>20</remote-type>
              <local-name>[tapOutHour]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>tapOutHour</remote-alias>
              <ordinal>25</ordinal>
              <family>cleaned_transjakarta.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>19</approx-count>
              <contains-null>true</contains-null>
              <object-id>[cleaned_transjakarta.csv_85D9D5A9AA4D4D2495EDEB192D73667F]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>travelDuration</remote-name>
              <remote-type>5</remote-type>
              <local-name>[travelDuration]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>travelDuration</remote-alias>
              <ordinal>26</ordinal>
              <family>cleaned_transjakarta.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>7637</approx-count>
              <contains-null>true</contains-null>
              <object-id>[cleaned_transjakarta.csv_85D9D5A9AA4D4D2495EDEB192D73667F]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>distance_km</remote-name>
              <remote-type>5</remote-type>
              <local-name>[distance_km]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>distance_km</remote-alias>
              <ordinal>27</ordinal>
              <family>cleaned_transjakarta.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>3838</approx-count>
              <contains-null>true</contains-null>
              <object-id>[cleaned_transjakarta.csv_85D9D5A9AA4D4D2495EDEB192D73667F]</object-id>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Indonesia&quot;' />
      </semantic-values>
      <filter class='categorical' column='[corridorName]' filter-group='2'>
        <groupfilter count='10' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
          <groupfilter direction='DESC' expression='COUNT([tapDay])' function='order' user:ui-marker='order'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[corridorName]' member='&quot;Andara - Stasiun Universitas Pancasila&quot;' />
              <groupfilter function='member' level='[corridorName]' member='&quot;Batusari - Grogol&quot;' />
              <groupfilter function='member' level='[corridorName]' member='&quot;Bekasi Barat - Blok M&quot;' />
              <groupfilter function='member' level='[corridorName]' member='&quot;Bekasi Barat - Kuningan&quot;' />
              <groupfilter function='member' level='[corridorName]' member='&quot;Bekasi Timur - Cawang&quot;' />
              <groupfilter function='member' level='[corridorName]' member='&quot;Bintara - Cipinang Indah&quot;' />
              <groupfilter function='member' level='[corridorName]' member='&quot;Bintaro - Blok M&quot;' />
              <groupfilter function='member' level='[corridorName]' member='&quot;Bintaro - Fatmawati&quot;' />
              <groupfilter function='member' level='[corridorName]' member='&quot;Blok M - Andara&quot;' />
              <groupfilter function='member' level='[corridorName]' member='&quot;Blok M - Kota&quot;' />
              <groupfilter function='member' level='[corridorName]' member='&quot;Blok M - Pasar Minggu&quot;' />
              <groupfilter function='member' level='[corridorName]' member='&quot;Blok M - PGC&quot;' />
              <groupfilter function='member' level='[corridorName]' member='&quot;Blok M - Universitas Indonesia&quot;' />
              <groupfilter function='member' level='[corridorName]' member='&quot;BSD - Jelambar&quot;' />
              <groupfilter function='member' level='[corridorName]' member='&quot;BSD Serpong - Fatmawati&quot;' />
              <groupfilter function='member' level='[corridorName]' member='&quot;Bulak Ringin - Kampung Rambutan&quot;' />
              <groupfilter function='member' level='[corridorName]' member='&quot;Bulak Turi - Tanjung Priok&quot;' />
              <groupfilter function='member' level='[corridorName]' member='&quot;Cawang UKI - Lubang Buaya&quot;' />
              <groupfilter function='member' level='[corridorName]' member='&quot;Cempaka Putih - Pulo Gadung via Kelapa Gading&quot;' />
              <groupfilter function='member' level='[corridorName]' member='&quot;Cibubur - Balai Kota&quot;' />
              <groupfilter function='member' level='[corridorName]' member='&quot;Cibubur - BKN&quot;' />
              <groupfilter function='member' level='[corridorName]' member='&quot;Cibubur - Kuningan&quot;' />
              <groupfilter function='member' level='[corridorName]' member='&quot;Cibubur Junction - Blok M&quot;' />
              <groupfilter function='member' level='[corridorName]' member='&quot;Cilangkap - Cililitan&quot;' />
              <groupfilter function='member' level='[corridorName]' member='&quot;Ciledug - Tendean&quot;' />
              <groupfilter function='member' level='[corridorName]' member='&quot;Cililitan - Condet&quot;' />
              <groupfilter function='member' level='[corridorName]' member='&quot;Cililitan - Condet via Kayu Manis&quot;' />
              <groupfilter function='member' level='[corridorName]' member='&quot;Cililitan - Dwikora&quot;' />
              <groupfilter function='member' level='[corridorName]' member='&quot;Cililitan - Kp. Pulo&quot;' />
              <groupfilter function='member' level='[corridorName]' member='&quot;Cilincing - Rorotan&quot;' />
              <groupfilter function='member' level='[corridorName]' member='&quot;Cinere - Bundaran Senayan&quot;' />
              <groupfilter function='member' level='[corridorName]' member='&quot;Cinere - Kuningan&quot;' />
              <groupfilter function='member' level='[corridorName]' member='&quot;Ciputat - CSW&quot;' />
              <groupfilter function='member' level='[corridorName]' member='&quot;Ciputat - Kampung Rambutan&quot;' />
              <groupfilter function='member' level='[corridorName]' member='&quot;Depok - BKN&quot;' />
              <groupfilter function='member' level='[corridorName]' member='&quot;Dukuh Atas - Casablanca via Epicentrum Raya&quot;' />
              <groupfilter function='member' level='[corridorName]' member='&quot;Dwikora - Penas Kalimalang&quot;' />
              <groupfilter function='member' level='[corridorName]' member='&quot;Gondangdia - Balai Kota&quot;' />
              <groupfilter function='member' level='[corridorName]' member='&quot;Gondangdia - Senen&quot;' />
              <groupfilter function='member' level='[corridorName]' member='&quot;Grogol - Benhil&quot;' />
              <groupfilter function='member' level='[corridorName]' member='&quot;Grogol - Meruya via Roxy&quot;' />
              <groupfilter function='member' level='[corridorName]' member='&quot;Grogol - Pos Pengumben via Slipi&quot;' />
              <groupfilter function='member' level='[corridorName]' member='&quot;Grogol - Srengseng&quot;' />
              <groupfilter function='member' level='[corridorName]' member='&quot;Grogol - Tubagus Angke&quot;' />
              <groupfilter function='member' level='[corridorName]' member='&quot;Harapan Baru - Pulo Gebang via Rawa Kuning&quot;' />
              <groupfilter function='member' level='[corridorName]' member='&quot;Harapan Indah - ASMI&quot;' />
              <groupfilter function='member' level='[corridorName]' member='&quot;Harmoni - Jakarta International Stadium&quot;' />
              <groupfilter function='member' level='[corridorName]' member='&quot;Jakarta International Stadium - Senen&quot;' />
              <groupfilter function='member' level='[corridorName]' member='&quot;Jambore Cibubur - Pasar Rebo&quot;' />
              <groupfilter function='member' level='[corridorName]' member='&quot;Jelambar - Juanda&quot;' />
              <groupfilter function='member' level='[corridorName]' member='&quot;JIS - Terminal Muara Angke&quot;' />
              <groupfilter function='member' level='[corridorName]' member='&quot;Joglo - Blok M&quot;' />
              <groupfilter function='member' level='[corridorName]' member='&quot;Kalibata - Kuningan&quot;' />
              <groupfilter function='member' level='[corridorName]' member='&quot;Kalideres - Bundaran HI via Veteran&quot;' />
              <groupfilter function='member' level='[corridorName]' member='&quot;Kalideres - Gelora Bung Karno&quot;' />
              <groupfilter function='member' level='[corridorName]' member='&quot;Kalideres - Puri Kembangan&quot;' />
              <groupfilter function='member' level='[corridorName]' member='&quot;Kalimalang - Duren Sawit&quot;' />
              <groupfilter function='member' level='[corridorName]' member='&quot;Kampung Melayu - Duren Sawit&quot;' />
              <groupfilter function='member' level='[corridorName]' member='&quot;Kampung Melayu - Pondok Kelapa&quot;' />
              <groupfilter function='member' level='[corridorName]' member='&quot;Kampung Melayu - Pulo Gadung&quot;' />
              <groupfilter function='member' level='[corridorName]' member='&quot;Kampung Melayu - Pulo Gebang via BKT&quot;' />
              <groupfilter function='member' level='[corridorName]' member='&quot;Kampung Melayu - Ragunan&quot;' />
              <groupfilter function='member' level='[corridorName]' member='&quot;Kampung Melayu - Tanah Abang&quot;' />
              <groupfilter function='member' level='[corridorName]' member='&quot;Kampung Melayu - Tanah Abang via Cikini&quot;' />
              <groupfilter function='member' level='[corridorName]' member='&quot;Kampung Rambutan - Bidara Cina&quot;' />
              <groupfilter function='member' level='[corridorName]' member='&quot;Kampung Rambutan - Blok M&quot;' />
              <groupfilter function='member' level='[corridorName]' member='&quot;Kampung Rambutan - Juanda via Pasar Baru&quot;' />
              <groupfilter function='member' level='[corridorName]' member='&quot;Kampung Rambutan - Lebak Bulus&quot;' />
              <groupfilter function='member' level='[corridorName]' member='&quot;Kampung Rambutan - Monas&quot;' />
              <groupfilter function='member' level='[corridorName]' member='&quot;Kampung Rambutan - Pasar Rebo via Poncol&quot;' />
              <groupfilter function='member' level='[corridorName]' member='&quot;Kampung Rambutan - Pinang Ranti&quot;' />
              <groupfilter function='member' level='[corridorName]' member='&quot;Kampung Rambutan - Pondok Gede&quot;' />
              <groupfilter function='member' level='[corridorName]' member='&quot;Kampung Rambutan - Ragunan&quot;' />
              <groupfilter function='member' level='[corridorName]' member='&quot;Kampung Rambutan - Tanjung Priok&quot;' />
              <groupfilter function='member' level='[corridorName]' member='&quot;Kebayoran Lama - Jelambar&quot;' />
              <groupfilter function='member' level='[corridorName]' member='&quot;Kebayoran Lama - Tanah Abang&quot;' />
              <groupfilter function='member' level='[corridorName]' member='&quot;Kelapa Gading - Rusun Kemayoran&quot;' />
              <groupfilter function='member' level='[corridorName]' member='&quot;Kp. Rambutan - Kalisari&quot;' />
              <groupfilter function='member' level='[corridorName]' member='&quot;Kp. Rambutan - Taman Wiladatika&quot;' />
              <groupfilter function='member' level='[corridorName]' member='&quot;Lebak Bulus - Andara&quot;' />
              <groupfilter function='member' level='[corridorName]' member='&quot;Lebak Bulus - Cipulir&quot;' />
              <groupfilter function='member' level='[corridorName]' member='&quot;Lebak Bulus - Pasar Baru&quot;' />
              <groupfilter function='member' level='[corridorName]' member='&quot;Lebak Bulus - Pasar Baru via Tomang&quot;' />
              <groupfilter function='member' level='[corridorName]' member='&quot;Lebak Bulus - Petukangan&quot;' />
              <groupfilter function='member' level='[corridorName]' member='&quot;Lebak Bulus - Ragunan&quot;' />
              <groupfilter function='member' level='[corridorName]' member='&quot;Lenteng Agung - Aseli&quot;' />
              <groupfilter function='member' level='[corridorName]' member='&quot;Matraman Baru - Ancol&quot;' />
              <groupfilter function='member' level='[corridorName]' member='&quot;Meruya - Blok M&quot;' />
              <groupfilter function='member' level='[corridorName]' member='&quot;Monas - Pantai Indah Kapuk&quot;' />
              <groupfilter function='member' level='[corridorName]' member='&quot;Palem Semi - Bundaran Senayan&quot;' />
              <groupfilter function='member' level='[corridorName]' member='&quot;Pancoran - Kampung Rambutan&quot;' />
              <groupfilter function='member' level='[corridorName]' member='&quot;Pangkalan Jati - Rawamangun&quot;' />
              <groupfilter function='member' level='[corridorName]' member='&quot;Pantai Maju - Balai Kota&quot;' />
              <groupfilter function='member' level='[corridorName]' member='&quot;Pantai Maju - Kota&quot;' />
              <groupfilter function='member' level='[corridorName]' member='&quot;Pasar Minggu - Ciganjur via KB Ragunan&quot;' />
              <groupfilter function='member' level='[corridorName]' member='&quot;Pasar Minggu - Jagakarsa&quot;' />
              <groupfilter function='member' level='[corridorName]' member='&quot;Pasar Minggu - Tanah Abang&quot;' />
              <groupfilter function='member' level='[corridorName]' member='&quot;Pasar Minggu - Velbak&quot;' />
              <groupfilter function='member' level='[corridorName]' member='&quot;Pelabuhan Kaliadem - Kota&quot;' />
              <groupfilter function='member' level='[corridorName]' member='&quot;Pesanggrahan - Blok M&quot;' />
              <groupfilter function='member' level='[corridorName]' member='&quot;PGC - Juanda&quot;' />
              <groupfilter function='member' level='[corridorName]' member='&quot;PGC 1 - Ancol&quot;' />
              <groupfilter function='member' level='[corridorName]' member='&quot;PGC 2 - Grogol 2&quot;' />
              <groupfilter function='member' level='[corridorName]' member='&quot;PGC 2 - Tanjung Priok&quot;' />
              <groupfilter function='member' level='[corridorName]' member='&quot;Pinang Ranti - Bundaran Senayan&quot;' />
              <groupfilter function='member' level='[corridorName]' member='&quot;Pinang Ranti - Kampung Rambutan&quot;' />
              <groupfilter function='member' level='[corridorName]' member='&quot;Pinang Ranti - Pluit&quot;' />
              <groupfilter function='member' level='[corridorName]' member='&quot;Pinang Ranti - Pramuka&quot;' />
              <groupfilter function='member' level='[corridorName]' member='&quot;Pinang Ranti - Pulo Gadung&quot;' />
              <groupfilter function='member' level='[corridorName]' member='&quot;Pluit - Senen&quot;' />
              <groupfilter function='member' level='[corridorName]' member='&quot;Pondok Kelapa - BKN&quot;' />
              <groupfilter function='member' level='[corridorName]' member='&quot;Pondok Labu - Blok M&quot;' />
              <groupfilter function='member' level='[corridorName]' member='&quot;Poris Plawad - Bundaran Senayan&quot;' />
              <groupfilter function='member' level='[corridorName]' member='&quot;Pulo Gadung - Kota&quot;' />
              <groupfilter function='member' level='[corridorName]' member='&quot;Pulo Gadung - Monas&quot;' />
              <groupfilter function='member' level='[corridorName]' member='&quot;Pulo Gadung - Rawa Buaya via Balai Kota&quot;' />
              <groupfilter function='member' level='[corridorName]' member='&quot;Pulo Gadung 2 - Dukuh Atas 2&quot;' />
              <groupfilter function='member' level='[corridorName]' member='&quot;Pulo Gadung 2 - Kuningan&quot;' />
              <groupfilter function='member' level='[corridorName]' member='&quot;Pulo Gadung 2 - Tosari&quot;' />
              <groupfilter function='member' level='[corridorName]' member='&quot;Pulo Gebang - Matraman&quot;' />
              <groupfilter function='member' level='[corridorName]' member='&quot;Pulo Gebang - Pulo Gadung 2&quot;' />
              <groupfilter function='member' level='[corridorName]' member='&quot;Pulo Gebang - Pulo Gadung 2 via PIK&quot;' />
              <groupfilter function='member' level='[corridorName]' member='&quot;Pulo Gebang - Rorotan&quot;' />
              <groupfilter function='member' level='[corridorName]' member='&quot;Puri Beta - Dukuh Atas&quot;' />
              <groupfilter function='member' level='[corridorName]' member='&quot;Puri Beta - Kuningan (Express)&quot;' />
              <groupfilter function='member' level='[corridorName]' member='&quot;Puri Beta - Pancoran Barat&quot;' />
              <groupfilter function='member' level='[corridorName]' member='&quot;Puri Beta - Ragunan&quot;' />
              <groupfilter function='member' level='[corridorName]' member='&quot;Puri Beta 2 - Tendean&quot;' />
              <groupfilter function='member' level='[corridorName]' member='&quot;Puri Kembangan - Sentraland Cengkareng&quot;' />
              <groupfilter function='member' level='[corridorName]' member='&quot;Ragunan - Blok M via Kemang&quot;' />
              <groupfilter function='member' level='[corridorName]' member='&quot;Ragunan - Dukuh Atas 2&quot;' />
              <groupfilter function='member' level='[corridorName]' member='&quot;Ragunan - Gelora Bung Karno&quot;' />
              <groupfilter function='member' level='[corridorName]' member='&quot;Ragunan - MH Thamrin&quot;' />
              <groupfilter function='member' level='[corridorName]' member='&quot;Ragunan - MH Thamrin via Kuningan&quot;' />
              <groupfilter function='member' level='[corridorName]' member='&quot;Ragunan - MH Thamrin via Semanggi&quot;' />
              <groupfilter function='member' level='[corridorName]' member='&quot;Rawa Buaya - Rawa Kompeni&quot;' />
              <groupfilter function='member' level='[corridorName]' member='&quot;Rawamangun - Duren Sawit&quot;' />
              <groupfilter function='member' level='[corridorName]' member='&quot;Rawamangun - Klender&quot;' />
              <groupfilter function='member' level='[corridorName]' member='&quot;Rawamangun - Tanah Merah&quot;' />
              <groupfilter function='member' level='[corridorName]' member='&quot;Rempoa - Blok M&quot;' />
              <groupfilter function='member' level='[corridorName]' member='&quot;Roxy - Benhil&quot;' />
              <groupfilter function='member' level='[corridorName]' member='&quot;Rusun Cakung Barat - Pulo Gadung&quot;' />
              <groupfilter function='member' level='[corridorName]' member='&quot;Rusun Cipinang Besar Selatan - Penas Kalimalang&quot;' />
              <groupfilter function='member' level='[corridorName]' member='&quot;Rusun Cipinang Muara - Jatinegara&quot;' />
              <groupfilter function='member' level='[corridorName]' member='&quot;Rusun Flamboyan - Cengkareng&quot;' />
              <groupfilter function='member' level='[corridorName]' member='&quot;Rusun Jati Rawasari - Senen&quot;' />
              <groupfilter function='member' level='[corridorName]' member='&quot;Rusun Jatinegara Kaum - Pulo Gadung&quot;' />
              <groupfilter function='member' level='[corridorName]' member='&quot;Rusun Kapuk Muara - Penjaringan&quot;' />
              <groupfilter function='member' level='[corridorName]' member='&quot;Rusun Komarudin - Penggilingan&quot;' />
              <groupfilter function='member' level='[corridorName]' member='&quot;Rusun Marunda - Rusun Waduk Pluit&quot;' />
              <groupfilter function='member' level='[corridorName]' member='&quot;Rusun Marunda - Tanjung Priok&quot;' />
              <groupfilter function='member' level='[corridorName]' member='&quot;Rusun Marunda - Terminal Terpadu Pulo Gebang&quot;' />
              <groupfilter function='member' level='[corridorName]' member='&quot;Rusun Penjaringan - Penjaringan&quot;' />
              <groupfilter function='member' level='[corridorName]' member='&quot;Rusun Pesakih - Kalideres&quot;' />
              <groupfilter function='member' level='[corridorName]' member='&quot;Rusun Pinus Elok - Rusun Pulo Gebang&quot;' />
              <groupfilter function='member' level='[corridorName]' member='&quot;Rusun Pondok Bambu - Walikota Jakarta Timur&quot;' />
              <groupfilter function='member' level='[corridorName]' member='&quot;Rusun Rawa Bebek - Bukit Duri&quot;' />
              <groupfilter function='member' level='[corridorName]' member='&quot;Rusun Rawa Bebek - Kodamar&quot;' />
              <groupfilter function='member' level='[corridorName]' member='&quot;Rusun Rawa Bebek - Penggilingan&quot;' />
              <groupfilter function='member' level='[corridorName]' member='&quot;Rusun Sindang Koja - Kp. Sawah&quot;' />
              <groupfilter function='member' level='[corridorName]' member='&quot;Rusun Tambora - Pluit&quot;' />
              <groupfilter function='member' level='[corridorName]' member='&quot;Rusun Waduk Pluit - Penjaringan&quot;' />
              <groupfilter function='member' level='[corridorName]' member='&quot;S. Parman - Tanah Abang&quot;' />
              <groupfilter function='member' level='[corridorName]' member='&quot;Sarana Jaya - Tebet Eco Park (TEP) - Stasiun Cawang&quot;' />
              <groupfilter function='member' level='[corridorName]' member='&quot;Semper - Rorotan&quot;' />
              <groupfilter function='member' level='[corridorName]' member='&quot;Senen - Blok M&quot;' />
              <groupfilter function='member' level='[corridorName]' member='&quot;Senen - Lebak Bulus&quot;' />
              <groupfilter function='member' level='[corridorName]' member='&quot;Senen - Pisangan Baru&quot;' />
              <groupfilter function='member' level='[corridorName]' member='&quot;Senen - Pulo Gadung&quot;' />
              <groupfilter function='member' level='[corridorName]' member='&quot;Senen - Pulo Gadung via Kelapa Gading&quot;' />
              <groupfilter function='member' level='[corridorName]' member='&quot;Senen - Tanah Abang&quot;' />
              <groupfilter function='member' level='[corridorName]' member='&quot;St. LRT Pegangsaan Dua - JIS&quot;' />
              <groupfilter function='member' level='[corridorName]' member='&quot;Stasiun Manggarai - Blok M&quot;' />
              <groupfilter function='member' level='[corridorName]' member='&quot;Stasiun Manggarai - UI&quot;' />
              <groupfilter function='member' level='[corridorName]' member='&quot;Stasiun Palmerah - Bundaran Senayan&quot;' />
              <groupfilter function='member' level='[corridorName]' member='&quot;Stasiun Palmerah - Tosari&quot;' />
              <groupfilter function='member' level='[corridorName]' member='&quot;Stasiun Tebet - BNN&quot;' />
              <groupfilter function='member' level='[corridorName]' member='&quot;Stasiun Tebet - Karet via Patra Kuningan&quot;' />
              <groupfilter function='member' level='[corridorName]' member='&quot;Stasiun Tebet - Karet via Underpass&quot;' />
              <groupfilter function='member' level='[corridorName]' member='&quot;Summarecon Bekasi - BNN&quot;' />
              <groupfilter function='member' level='[corridorName]' member='&quot;Sunter Boulevard Barat - Penjaringan&quot;' />
              <groupfilter function='member' level='[corridorName]' member='&quot;Taman Kota - Budi Luhur&quot;' />
              <groupfilter function='member' level='[corridorName]' member='&quot;Taman Waduk Papanggo - Kota Tua&quot;' />
              <groupfilter function='member' level='[corridorName]' member='&quot;Tanah Abang - Blok M&quot;' />
              <groupfilter function='member' level='[corridorName]' member='&quot;Tanah Abang - Grogol via Tawakal&quot;' />
              <groupfilter function='member' level='[corridorName]' member='&quot;Tanah Abang - Jembatan Lima&quot;' />
              <groupfilter function='member' level='[corridorName]' member='&quot;Tanah Abang - Kebayoran Lama&quot;' />
              <groupfilter function='member' level='[corridorName]' member='&quot;Tanah Abang - Kebayoran Lama via Pos Pengumben&quot;' />
              <groupfilter function='member' level='[corridorName]' member='&quot;Tanah Abang - Kota&quot;' />
              <groupfilter function='member' level='[corridorName]' member='&quot;Tanah Abang - Meruya&quot;' />
              <groupfilter function='member' level='[corridorName]' member='&quot;Tanah Abang - Stasiun Gondangdia&quot;' />
              <groupfilter function='member' level='[corridorName]' member='&quot;Tanjung Priok - Blok M&quot;' />
              <groupfilter function='member' level='[corridorName]' member='&quot;Tanjung Priok - Jembatan Item&quot;' />
              <groupfilter function='member' level='[corridorName]' member='&quot;Tanjung Priok - PGC 2&quot;' />
              <groupfilter function='member' level='[corridorName]' member='&quot;Tanjung Priok - Pluit&quot;' />
              <groupfilter function='member' level='[corridorName]' member='&quot;Tanjung Priok - Plumpang&quot;' />
              <groupfilter function='member' level='[corridorName]' member='&quot;Tanjung Priok - Senen via Taman BMW&quot;' />
              <groupfilter function='member' level='[corridorName]' member='&quot;Tanjung Priok - Sukapura&quot;' />
              <groupfilter function='member' level='[corridorName]' member='&quot;Tanjung Priok - Tanah Merdeka&quot;' />
              <groupfilter function='member' level='[corridorName]' member='&quot;Term. Pulo Gadung - Lampiri&quot;' />
              <groupfilter function='member' level='[corridorName]' member='&quot;Term. Rawamangun - Term. Manggarai&quot;' />
              <groupfilter function='member' level='[corridorName]' member='&quot;Term. Tj. Priok - Pegangsaan II IGI&quot;' />
              <groupfilter function='member' level='[corridorName]' member='&quot;Terminal Kalideres - Terminal Muara Angke&quot;' />
              <groupfilter function='member' level='[corridorName]' member='&quot;Terminal Kampung Melayu - Kapin Raya&quot;' />
              <groupfilter function='member' level='[corridorName]' member='&quot;Terminal Kampung Melayu - Terminal Klender&quot;' />
              <groupfilter function='member' level='[corridorName]' member='&quot;Terminal Rawamangun - Cipinang Muara&quot;' />
              <groupfilter function='member' level='[corridorName]' member='&quot;Terminal Tanah Merah - Pulo Gadung&quot;' />
              <groupfilter function='member' level='[corridorName]' member='&quot;Terminal Tanjung Priok - Ancol Barat&quot;' />
              <groupfilter function='member' level='[corridorName]' member='&quot;Tongtek - Tebet Eco Park (TEP) - Cililitan&quot;' />
              <groupfilter function='member' level='[corridorName]' member='&quot;TU Gas - Bundaran Senayan&quot;' />
              <groupfilter function='member' level='[corridorName]' member='&quot;Universitas Indonesia - Lebak Bulus&quot;' />
            </groupfilter>
          </groupfilter>
        </groupfilter>
      </filter>
      <object-graph>
        <objects>
          <object caption='cleaned_transjakarta.csv' id='cleaned_transjakarta.csv_85D9D5A9AA4D4D2495EDEB192D73667F'>
            <properties context=''>
              <relation connection='textscan.0pyawai07dopi315uqz070yq6k97' name='cleaned_transjakarta.csv' table='[cleaned_transjakarta#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_ID' separator=','>
                  <column datatype='string' name='transID' ordinal='0' />
                  <column datatype='integer' name='payCardID' ordinal='1' />
                  <column datatype='string' name='payCardBank' ordinal='2' />
                  <column datatype='string' name='payCardName' ordinal='3' />
                  <column datatype='string' name='payCardSex' ordinal='4' />
                  <column datatype='integer' name='payCardBirthDate' ordinal='5' />
                  <column datatype='string' name='corridorID' ordinal='6' />
                  <column datatype='string' name='corridorName' ordinal='7' />
                  <column datatype='real' name='direction' ordinal='8' />
                  <column datatype='string' name='tapInStops' ordinal='9' />
                  <column datatype='string' name='tapInStopsName' ordinal='10' />
                  <column datatype='real' name='tapInStopsLat' ordinal='11' />
                  <column datatype='real' name='tapInStopsLon' ordinal='12' />
                  <column datatype='integer' name='stopStartSeq' ordinal='13' />
                  <column datatype='datetime' name='tapInTime' ordinal='14' />
                  <column datatype='string' name='tapOutStops' ordinal='15' />
                  <column datatype='string' name='tapOutStopsName' ordinal='16' />
                  <column datatype='real' name='tapOutStopsLat' ordinal='17' />
                  <column datatype='real' name='tapOutStopsLon' ordinal='18' />
                  <column datatype='real' name='stopEndSeq' ordinal='19' />
                  <column datatype='datetime' name='tapOutTime' ordinal='20' />
                  <column datatype='real' name='payAmount' ordinal='21' />
                  <column datatype='string' name='tapDay' ordinal='22' />
                  <column datatype='integer' name='payCardAge' ordinal='23' />
                  <column datatype='integer' name='tapInHour' ordinal='24' />
                  <column datatype='integer' name='tapOutHour' ordinal='25' />
                  <column datatype='real' name='travelDuration' ordinal='26' />
                  <column datatype='real' name='distance_km' ordinal='27' />
                </columns>
              </relation>
            </properties>
            <properties context='extract'>
              <relation name='Extract' table='[Extract].[Extract]' type='table' />
            </properties>
          </object>
        </objects>
      </object-graph>
    </datasource>
  </datasources>
  <worksheets>
    <worksheet name='Corridor and Duration'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Corridor and Duration&#10;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='cleaned_transjakarta' name='federated.1schfk01iwhnpb130bk981sidxvv' />
          </datasources>
          <datasource-dependencies datasource='federated.1schfk01iwhnpb130bk981sidxvv'>
            <column-instance column='[travelDuration]' derivation='Avg' name='[avg:travelDuration:qk]' pivot='key' type='quantitative' />
            <column caption='Corridor Name' datatype='string' name='[corridorName]' role='dimension' type='nominal' />
            <column-instance column='[corridorName]' derivation='None' name='[none:corridorName:nk]' pivot='key' type='nominal' />
            <column caption='Tap Day' datatype='string' name='[tapDay]' role='dimension' type='nominal' />
            <column caption='Travel Duration' datatype='real' name='[travelDuration]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <computed-sort column='[federated.1schfk01iwhnpb130bk981sidxvv].[none:corridorName:nk]' direction='DESC' using='[federated.1schfk01iwhnpb130bk981sidxvv].[avg:travelDuration:qk]' />
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>[federated.1schfk01iwhnpb130bk981sidxvv].[none:corridorName:nk]</rows>
        <cols>[federated.1schfk01iwhnpb130bk981sidxvv].[avg:travelDuration:qk]</cols>
      </table>
      <simple-id uuid='{13477C50-C873-4C02-A3D3-8E09DF7017B2}' />
    </worksheet>
    <worksheet name='Gender vs travel duration &amp; distance'>
      <table>
        <view>
          <datasources>
            <datasource caption='cleaned_transjakarta' name='federated.1schfk01iwhnpb130bk981sidxvv' />
          </datasources>
          <datasource-dependencies datasource='federated.1schfk01iwhnpb130bk981sidxvv'>
            <column-instance column='[distance_km]' derivation='Avg' name='[avg:distance_km:qk]' pivot='key' type='quantitative' />
            <column-instance column='[travelDuration]' derivation='Avg' name='[avg:travelDuration:qk]' pivot='key' type='quantitative' />
            <column caption='Distance Km' datatype='real' name='[distance_km]' role='measure' type='quantitative' />
            <column-instance column='[payCardSex]' derivation='None' name='[none:payCardSex:nk]' pivot='key' type='nominal' />
            <column caption='Pay Card Sex' datatype='string' name='[payCardSex]' role='dimension' type='nominal' />
            <column caption='Travel Duration' datatype='real' name='[travelDuration]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1schfk01iwhnpb130bk981sidxvv].[:Measure Names]'>
            <groupfilter function='level-members' level='[:Measure Names]' />
          </filter>
          <slices>
            <column>[federated.1schfk01iwhnpb130bk981sidxvv].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <lod column='[federated.1schfk01iwhnpb130bk981sidxvv].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.1schfk01iwhnpb130bk981sidxvv].[avg:travelDuration:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <lod column='[federated.1schfk01iwhnpb130bk981sidxvv].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.1schfk01iwhnpb130bk981sidxvv].[avg:distance_km:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <lod column='[federated.1schfk01iwhnpb130bk981sidxvv].[:Measure Names]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1schfk01iwhnpb130bk981sidxvv].[none:payCardSex:nk]</rows>
        <cols>([federated.1schfk01iwhnpb130bk981sidxvv].[avg:travelDuration:qk] + [federated.1schfk01iwhnpb130bk981sidxvv].[avg:distance_km:qk])</cols>
      </table>
      <simple-id uuid='{E0343D92-B345-42FD-9861-F1B2CC4AFC73}' />
    </worksheet>
    <worksheet name='Pay Card Bank by Average Age'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Pay Card Bank by Average Age</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='cleaned_transjakarta' name='federated.1schfk01iwhnpb130bk981sidxvv' />
          </datasources>
          <datasource-dependencies datasource='federated.1schfk01iwhnpb130bk981sidxvv'>
            <column-instance column='[payCardAge]' derivation='Avg' name='[avg:payCardAge:qk]' pivot='key' type='quantitative' />
            <column-instance column='[payCardBank]' derivation='None' name='[none:payCardBank:nk]' pivot='key' type='nominal' />
            <column caption='Pay Card Age' datatype='integer' name='[payCardAge]' role='measure' type='quantitative' />
            <column caption='Pay Card Bank' datatype='string' name='[payCardBank]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.1schfk01iwhnpb130bk981sidxvv].[none:payCardBank:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.1schfk01iwhnpb130bk981sidxvv].[avg:payCardAge:qk]' shelf='columns' />
          </shelf-sorts>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1schfk01iwhnpb130bk981sidxvv].[none:payCardBank:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1schfk01iwhnpb130bk981sidxvv].[avg:payCardAge:qk]</rows>
        <cols>[federated.1schfk01iwhnpb130bk981sidxvv].[none:payCardBank:nk]</cols>
      </table>
      <simple-id uuid='{78222E81-EF19-4B57-8092-8B16409FC43B}' />
    </worksheet>
    <worksheet name='Pay amount vs corridor'>
      <table>
        <view>
          <datasources>
            <datasource caption='cleaned_transjakarta' name='federated.1schfk01iwhnpb130bk981sidxvv' />
          </datasources>
          <datasource-dependencies datasource='federated.1schfk01iwhnpb130bk981sidxvv'>
            <column caption='Corridor Name' datatype='string' name='[corridorName]' role='dimension' type='nominal' />
            <column-instance column='[corridorName]' derivation='None' name='[none:corridorName:nk]' pivot='key' type='nominal' />
            <column caption='Pay Amount' datatype='real' name='[payAmount]' role='measure' type='quantitative' />
            <column-instance column='[payAmount]' derivation='Sum' name='[sum:payAmount:qk]' pivot='key' type='quantitative' />
            <column caption='Tap Day' datatype='string' name='[tapDay]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <computed-sort column='[federated.1schfk01iwhnpb130bk981sidxvv].[none:corridorName:nk]' direction='DESC' using='[federated.1schfk01iwhnpb130bk981sidxvv].[sum:payAmount:qk]' />
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>[federated.1schfk01iwhnpb130bk981sidxvv].[none:corridorName:nk]</rows>
        <cols>[federated.1schfk01iwhnpb130bk981sidxvv].[sum:payAmount:qk]</cols>
      </table>
      <simple-id uuid='{600B8E63-FB1F-427C-B37D-C676AB45F26B}' />
    </worksheet>
    <worksheet name='Top 10 Corridor'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Top 10 corridor</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='cleaned_transjakarta' name='federated.1schfk01iwhnpb130bk981sidxvv' />
          </datasources>
          <datasource-dependencies datasource='federated.1schfk01iwhnpb130bk981sidxvv'>
            <column-instance column='[tapInHour]' derivation='Count' name='[cnt:tapInHour:qk]' pivot='key' type='quantitative' />
            <column caption='Corridor Name' datatype='string' name='[corridorName]' role='dimension' type='nominal' />
            <column-instance column='[corridorName]' derivation='None' name='[none:corridorName:nk]' pivot='key' type='nominal' />
            <column caption='Tap Day' datatype='string' name='[tapDay]' role='dimension' type='nominal' />
            <column caption='Tap In Hour' datatype='integer' name='[tapInHour]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <computed-sort column='[federated.1schfk01iwhnpb130bk981sidxvv].[none:corridorName:nk]' direction='DESC' using='[federated.1schfk01iwhnpb130bk981sidxvv].[cnt:tapInHour:qk]' />
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>[federated.1schfk01iwhnpb130bk981sidxvv].[none:corridorName:nk]</rows>
        <cols>[federated.1schfk01iwhnpb130bk981sidxvv].[cnt:tapInHour:qk]</cols>
      </table>
      <simple-id uuid='{4EA8BEFE-EBC3-44D3-AE36-E62200123356}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard enable-sort-zone-taborder='true' name='Dashboard 1'>
      <style />
      <size sizing-mode='automatic' />
      <zones>
        <zone h='26810' id='1' name='Gender vs travel duration &amp; distance' w='97698' x='1058' y='1743' />
        <zone h='27614' id='2' name='Pay Card Bank by Average Age' w='51525' x='-124' y='26139' />
        <zone h='35925' id='3' name='Top 10 Corridor' w='47791' x='51276' y='28284' />
        <zone h='47855' id='4' name='Corridor and Duration' w='51151' x='498' y='54021' />
        <zone h='33244' id='5' name='Pay amount vs corridor' w='47231' x='51649' y='63405' />
      </zones>
      <simple-id uuid='{02643CC0-7123-480D-83B7-CCE28E34B6DF}' />
    </dashboard>
  </dashboards>
  <windows saved-dpi-scale-factor='1.5' source-height='44'>
    <window class='worksheet' name='Gender vs travel duration &amp; distance'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1schfk01iwhnpb130bk981sidxvv].[:Measure Names]</field>
            <field>[federated.1schfk01iwhnpb130bk981sidxvv].[none:corridorName:nk]</field>
            <field>[federated.1schfk01iwhnpb130bk981sidxvv].[none:payCardName:nk]</field>
            <field>[federated.1schfk01iwhnpb130bk981sidxvv].[none:payCardSex:nk]</field>
            <field>[federated.1schfk01iwhnpb130bk981sidxvv].[none:tapOutStopsName:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{F6859824-CF40-4100-ACDC-38FA1F7D414F}' />
    </window>
    <window class='worksheet' name='Pay Card Bank by Average Age'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1schfk01iwhnpb130bk981sidxvv].[none:payCardBank:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1schfk01iwhnpb130bk981sidxvv].[none:payCardBank:nk]</field>
            <field>[federated.1schfk01iwhnpb130bk981sidxvv].[none:payCardID:ok]</field>
            <field>[federated.1schfk01iwhnpb130bk981sidxvv].[none:payCardName:nk]</field>
            <field>[federated.1schfk01iwhnpb130bk981sidxvv].[none:tapDay:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{96450506-AC07-4927-BE26-2B535A3BCF38}' />
    </window>
    <window class='worksheet' name='Top 10 Corridor'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1schfk01iwhnpb130bk981sidxvv].[cnt:direction:ok]</field>
            <field>[federated.1schfk01iwhnpb130bk981sidxvv].[none:corridorID:nk]</field>
            <field>[federated.1schfk01iwhnpb130bk981sidxvv].[none:corridorName:nk]</field>
            <field>[federated.1schfk01iwhnpb130bk981sidxvv].[none:tapDay:nk]</field>
            <field>[federated.1schfk01iwhnpb130bk981sidxvv].[yr:tapInTime:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{0EC6CBA6-CCED-47F1-BAAE-FA31B860978E}' />
    </window>
    <window class='worksheet' name='Corridor and Duration'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1schfk01iwhnpb130bk981sidxvv].[none:corridorName:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{BB227306-3EBD-4607-9801-FC5EA92E2F8F}' />
    </window>
    <window class='worksheet' name='Pay amount vs corridor'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1schfk01iwhnpb130bk981sidxvv].[none:corridorName:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{CE4ABC3F-3438-45A6-A097-0B1C5D03848A}' />
    </window>
    <window class='dashboard' maximized='true' name='Dashboard 1'>
      <viewpoints>
        <viewpoint name='Corridor and Duration' />
        <viewpoint name='Gender vs travel duration &amp; distance' />
        <viewpoint name='Pay Card Bank by Average Age'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Pay amount vs corridor' />
        <viewpoint name='Top 10 Corridor' />
      </viewpoints>
      <active id='5' />
      <simple-id uuid='{FA67188F-F044-4249-9DDE-9032AD842294}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Corridor and Duration' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Dashboard 1' width='192'>
      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
      AAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='135' name='Gender vs travel duration &amp; distance' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Pay Card Bank by Average Age' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABYlAAAWJQFJUiTw
      AAAXZUlEQVR4nO3de3xU9Z3/8dc5c8kkmZkkJCEhgVyQBCQBwv0iUQOCovWy7Wp37W+ra/3Z
      n9uFrrX2V6WuWtvVX7Xa+uv6aLur/vx17WW39VatYlFAINwEwp1ALgRIAiHkMslMZjJzztk/
      wAglkUk4E5Kcz/Px8GFIZr6XnHnnnJnzPZ+jGIZhIIQFKYqiqJd7EEJcThIAYWkSAGFpEoAR
      qLurg86u7ktuRw8Hae/sMmFEQ5f9cg9gxOru4NVf/owDx9txetK45fY7mVmYhRLt8w2NqooN
      /P7t1YRco7nr3nvJS42P6qm733uZTep8lt82BzDY/ParvFl+EBSVMRNKuOvOL5Ecb7toO/7a
      TTy9qpWnln8x2lEPO7IHiBWtm4NH6ln0hdtZNn8C//bc85wKGpysO8iaDz+kovIouh5i15Yd
      dEY00LrZu2cP/pAGwKnqrTz789eZvuhmri+ditYdIdjRzJb1a1lX/gmd3RoRfwt7KuvYubWc
      9hD4Th1j3Zo1VB5vOWcgBseqDpMzYzF3/s3t6FWreWdbHVrIz65tG/lozXqafCGgmz279nOi
      rpI1azfQ5Aue00SEg3t20xa49L3KUCN7gBhSnQkUTp5CjqeIVW+/QXvrada8/kd8mkHla7/l
      3pVPceDP/4+jrpUsGtPO7/7wPg+tLAZ0KtatYdZf3c3ShdNRzu42Nv/pDdbsOUngZDWbau5g
      eambl15+C0/aGL42Jouf/fAJPLlX4j9ay7iccwZiaByvPcSuwFFa7WNYVjiGYwfKefeDbSiR
      Fl7/6ADPPXk7rz37A4z8ycR11bOmsp2HyhIAqKv4M79Z3chD3ywa9N9hrEkAYijcfoJXf/EC
      zmAjp70LyE5PYmHpXHYdOkagvo6jTW0su/l6/s/7f2b8bMicWorHoQA6AX+Y5GRPz4sfDApL
      5nPCv4OWZIMdVbVQOoVTLSGee/ob1G79A8lTv8Qj99/EjjdeYNNfjMUwDAwMQl0BOgJBcvOL
      mTm1jaZWH3Xr9tEJkDGJ7z38Xboaynn+1cOEGU/NJx/w1P5EvvPDH+J2XvywabiRQ6AYUp3x
      FEwqYsH1d/LU9+4lVLedX6+u5JYvfolpV2QCkFF8NQl1G3mzvJr5s4vOvkewMX7SODavXY8v
      GCEcChDwt/HKL/4/BQuuZ+m1M4k728e4idNQUFAUlVAoQETX8Qe6/nIgzL/uFr561z18aX4W
      H27azapfv0Qos4TbblxCsuvTByqgnPnfpzxpWWQlqRxtPM1IPGMqe4AYssUnseCaxeSNcgLg
      d6fQWbWOBx7chyvoo3QmYPNw/VU5/HyHi29le3qeO2nhrUzc+WP+6f77UOI9fP2B7zLaHeHp
      lQ+SlZVEl/P8w5Hsgtkorz3OfV9fQ7ItwBXLFn32w4ifl3/0MG8mxhE2bPzjo3ehVezlZz99
      go/H5tIa6HsO6XnFLL+tgBf+/RVyl3+L/LQEM39Fl50iSyFiRNdo83Xg9iRht539k2oYdLa3
      EogouF02cMSTEGdn8+9fYIezlH+4ZcZ5TWjhEK2tbeiqg1EpKRjhAK3tfhK9HsLdGt5EB75A
      hCRPIopiEPT7aPd3k5gQh6HG4UmIAwwCvjZ8gRAAzng3KUlujEiI0y1txCV6MbqDuFOS6Gjt
      wJvsxdBCdHRG8CTa6QjqJLvj6Wxvw5bgId45cv5mKoqiDIkAaJqGzTbyji+jUVWxnm2VzSy9
      9TZSXVF/SCpMMGQCEA6HcTgcl3sYwmJkMZywPAmAsDQJgLA0CYCwNAmAsDQJgLA0CYCwNAmA
      sLQYnNc26GxpovZYI4YjgYKCCcQ7VE4dr+ZYUzsAGTkFZKd5LtKOELFnfgC0MA0nW0jLzEb3
      N7F67RZuWjKP3fsOUDxjHnZVIT7R1efT27pa2XRkg2nDSUtMZ3bOPNPaEyOL+QFQHRRMmgRA
      V7uGraoFQ++kO+TC4bAT54wnPq7vZQ+nOpv41baXTBvOlDElEgDRJ/MDoCh0dzSzZes2Tp72
      M+OapdgMB3m5qVQfqqSjrY3RhSUU52UQDoeBM4vhPl2SFAlHTB2OYeh0d4+8S/mEOWKytjXO
      k0bpouvpbD3Bpi2fMGbpIq6cNh0AreMk7287wuS8jPMWwH36td1h7pAURcXpdJraphg5TP8U
      KBLs5FBVNWENnE473d0Rgm0n2LH3EBFNp76uhoSklOirIwgRQ6bvAWxxCXhsYTZ9vAbivJQu
      LcPrsmME/axfu4akMeMpnZ4nARBDgukBUBSVMfmTGJM/6bzvp2ZfQVn2FWZ3d0n09uMYXa2m
      tacm56K4vKa1J2Jv5FzfNgChTS8SOfC2ae25bv4pjgmLTWtPxJ6cCRaWZuk9wGAxDAMjbN6h
      FoqK6kg2rz0LkwAMBj1EW8VXTGtOcaSQMv3XprVnZXIIJCxNAiAsTQIgLE0CICxNAiAsTQIg
      LE0CICxNAiAsTQIgLE0CICxNlkKMMJrPB7puWntqUhKKMnKv3pAAjDAnvvswWot5C+/GvvIS
      Snx09ycejuQQSFiaBEBYmgRAWJoEQFiaBEBYmgRAWJoEQFia+ecBDI26Q/uoqT+FrtiZUDSd
      3NFeWuoPs/NAHXHedGZOn0K8Q7InLj/zX4WGgTs1m4XXlFE6u4iKbdsIh1rYsOMI868pI8cd
      pOLgUdO7FWIgzA+Aaic1LRW7onO8tgpPaiah0ydwZ+cT77CRPS6PttNNmHeyXoiBi8lSiFBH
      M1u2bcffDeMKctG0ZlSbigKoNht6RMOAy14eXTdxzQxAJBLB6KUvQw+b2g8Gfc7p7K/RNOFw
      GMVmM7fRIcT0ABiGgdOdytWLrsfQu1n73mqy5hXRVdeOYRh0BTqJS0xEBWyXuTy6pqqm7ons
      djuOXvoyNB2/if2g0OeczF635nA4UEdweXnTA6AFO9m+cyeOeC+G1oXuycSbkkVq+ACbt0cI
      tDRROKNUqkOLIcH0ANhdbqaVzKDT3wU2B1OTvNhVlVlXL6K1tR37pCvxukfu6kIxvMTkFkmu
      BDeuBPd531ZtTlLT0k3vTohLIR/GC0uTAAhLkwAIS5MACEuTAAhLkwAIS5MACEuTAAhLk7pA
      YkCqG1p5e0Olae1dmZvGDXMnmNZetCQAYkBOtwdYW3HEtPYMDAmAEL35/Z4KalpPm9beV6bN
      JDvpzG1mJQBiyPOFQpwOBExrL3zOdSDyJlhYmgRAWJoEQFiaBEBYmgRAWJoEQFiaBEBYmgRA
      WJoEQFiaBEBYmgRAWFoMyqMbdHWcZs+efXRG7BSVzCAjKZ6afVupbmgHIG/yLAqyU0zvWoj+
      iioAgUAAn89HZmbmxR+sh6iqOc6EafNwKx28t3o9y269jpqGNsoWLcFuk6KIYuiI6hBo//79
      vPjii9G1aHMxpaSEUe44IsEQtrg4VK2D9lMd7Nu3lyP1p9BNrmAsxED16xDo4MGDOJ1Oxo8f
      f5FHGtRXbmfb4TYWlpViV22ULS2lO6JxsnYfm1tyWTAlX8qjD9QQKI8eiZi7nXR9MLdTuKev
      fgWgvLwcr9dLRkYGLpcLW2914w2D2l0bqQom84Vli7DbVAzDICU1HUVRGO228f62WjTye0qi
      g5RH75chUB7dbjd3O6lq39tJVc39rMZud/T0NaCWV65cSU1NTa8/M8Id7KpqIn9MEicaG2g8
      eZpA+0k2b/2EuqNHqdi1l/SsLEbuLRfEcBJVjAsLC7n77rtxuVzY7XamTp1KdnZ27w+2xTNj
      5hT8gU7CgMOlkJ6RxdSJNupPniZ9/DSyM1NNnIIQAxdVALxeL16vt+ffo0eP7vOxis1BTn7B
      hR0lp1OYLOXRxdAiJ8KEpfXjnYxBw+EdvP7Hj0iZPA/PqVqm3/plxnnjYjc6IWIs+j1AoIEn
      nnyRgumz8Pu7CDXv5OM9J2I4NCFiL/oAhP20huOZUVJEYhx0+Pwocqs7McxFfwjkncCKO6bw
      7RUP0NUdYezkq3l0ZlYMhyZE7EUfAC1EWuFVfOvbc9F0sNtUGmqr0bNzSPXKXR/F8BR9ACLt
      PP+Df6FwwXycaGxbv4GcK6+kxR/H9598hLR4+UBJDD/RB6CzmRPOHF5Yvpw4DP5gNNA17U4O
      v/UsVQ0+0q5IjuEwhYiN6AMwKp/SUSf54Y9/yeQMG+9tOMo9SxI5pIFHbnwthqnoA6Am8sDT
      P6V8/UbaggbfefonFI71kPUP3yNvtJwLEMNTvw7cVaeHqVOnkJIA7772ImsPtFIwMR+HfBoq
      hqmo9gD+lno+XreejRvLiTjd7Kus4RvffpQFk6K4QkyIISyqPcChTX/klT/t4o77/zePfWcF
      43MyuCI/l8Q4ub2AGN6iegVPnH8L92ob+K9fPoc9wUPNsSZqjtSRlTJRQiCGtahevQmjslh6
      yx0sufl22k/Vs3/vbjas/h22+K9z3bQ+rgsQYhjo159vRVFIHj2WBYvGMr/sBjRzL9UUYtAN
      +PhFUVTscl2jGOYuHgA9Ql1tFb7AhZUNRo+bQEaynAQTw9fFA6B1s/uTcmobGln1wXbKll2L
      E40dG8v58iM/ZZkEQAxjFw+AI4Gbv3wPnN7LR7v9rFixAicGfzAaae3svY6LEMNF9O8BUvJZ
      4G3gX57/N4oyHbyz8Shfu9F78ecJMYT1402wi/uf+BE7t31CW9Dgoad/QlH+qNiNTIhB0I/l
      0Ed5/JnXefLJB0mQpf9ihIg+AO4sFhfYefl3q7jrtmtwKGBzOHHY/iINhkbt/gqqGlrQ9Qij
      xhUxe3IOtXs2c7DBh6E4WFBaSnK8nEEWl1/0r8L243y8t5aWjv08XP4OCnDDXQ9x06yc8x9n
      aHgyx7PoyhkoeojV763Dn+tkT4POjUuW4Ks/wK591Vw9a6JcUi8uu368Cb6C7z/5JCebWnoK
      yialZVz4ONVJWqoTQ49Qe2A3StoYtNZmvBmZ2FWF5FHpdB6uQQeUs1V/DcNA07QzX5tcCRg+
      a7u3n5nak6H33pfpc6LPOZldHVrXdYxe+jK7YjNG39vJMHlSuv7ZdurHNcE+/u/jj1DlC6G6
      vJw8eox7H32OG0rGXvjQYAdbyzegJ+Vz7dyJBBv29fzszF/9MxP6dGKGYZz3tZkMo+82zX6x
      9NWX2XPic+ZkNuPMpHr/vpn9xKDNPvs65/UWfQBa61h7ysvzKxbT4CrmyFvPoNh7KWdtaOza
      tJGkCbOZPC4VRVGwJafQWdmIbuTj72gjwe1FhZ6687qu95TbVnsruX4JFEXps5R32ORa4qqq
      9tqXoZlbSx+l7/LkZpdHt9lsqL301Wtp/EvwedtJMXlSNputp6/oA5CUyQTFT9iTSsW7b3Ki
      rgFXZ+iChxmhDg7XN5Ec2UlDJcR7Mpkzt5iCpMO8t+oDNA0WXFMmx/9iSIg+AM50Hn9mJU53
      CksX+jlWMpOrZ1+4FFpxJfM3/+OrF3x/4qxrmXhJQxXCfFF9ot/WcJA33v2YhOR04p0OJpXM
      xnb6MMfaZCmEGN6iCsCRnWvZXh/A/umxmOqg7dh21lUci+XYhIi5qALgTc+kpeYAHaEIGAbh
      UDuHq5vJTJe1QGJ4i+o9QF7JYuaXP8MjK/+Z7DQ3rU3HiRt/A4snyx1fxPAWVQBUp4e/++Zj
      LK6r5kSLH09qBvnjxmBX5bMcMbz1ozq0TurYCWTlyUo4MXJEHwB/PY888jRphTO4tqyMaYW5
      xMc5TD9JIcRg6seJsDye/dmLHK2sYNW7r/HC00eYseBqbrr5C0zKGY0cDYnhKPrjmUiQfTvK
      +eNb71B9qptrl93Cwuk5/OtTj1PdHIzhEIWInej3AB2N/GndDhYsuZ2/m5iPN9EFuoZqKCTK
      0n4xTEX/0k3O5Vsr7ifcHcZApysQwOF0MXfh4hgOT4jYij4ARpBXf/QYa/YeQ4lLoL25hXse
      /Qm3zcmL3eiEiLHoA9BSw9uVKj966H9yMr6IQ6//mFEpciZYDG/RvwlOHMVoPYCR6OVg+Tqa
      mk9y9IQvhkMTIvai3gMYrkwe//5yPJk5lOQ2cjjpK9w6d1wsxyZEzEUVAK27g3d++yt2Vp0g
      IT2fr959J3M8cl8wMfxFtxx6+we8v9fPXffdR652mF+9uzXW4xJiUER3QUxTI2mTppM3dixz
      Z0+h9lhDrMclxKCIbjWozc6u919lxc63CPlOccwHy5dv6L0ukBDDSFQBmHbD1/jP6+6+4Ps2
      Ry9VIYQYRqLbA9gduOyOWI9FiEEni/uFpQ04AB/95jl+s77KzLEIMegGvI5z7o13ozncff48
      HPQT1B14Es68T/D7WvD5zxTScieNwpMg5xHE5Rd9AMIdbNmyk67IZ0VRbY448gqLGHdedQid
      xpqDHKo+hD++iBsXFgAGmzeuJS27AJuqoLi8EgAxJER/CKT7eeXnL1NbX099/VF++9IvKN+6
      kR888RQn/OdW9VVIGp3DVfNnEGc7e5mY0YWhplE8pZji4mIyUxLNnYUQA9SPC2JO06ikc8ff
      3kmCAnHNe+gsvpFg/XPUNvrInJBy9oEKCW43BFo+e65ukOgM89HqPxMKaRTPuYq80V7C4TO3
      XtU0radabyRsbiFZw9Dp7u69gp3ZJb4jkQhGL30Z+oW3mL0kBn3OyewCy+FwuKeI8bkiEXO3
      k64P5nYK9/QVfQBSr+Cm8V089sQzjE9V2bylmW/c5OWI7mBU0kX+otsSmV925sKZsK+RVZ8c
      IGfRXByOzz5a/fRru8Pcy8sURcXp7P18haaqmPmrtdvtOHrpy9B0/Cb2g0KfczK7RoHD4UDt
      pa++KjkPlKr2vZ1U1dwPK+12R09f0c+iO8Ts275GcSCAoags++t7yM1IIPuf/pnMtM8/IRbq
      aKWhPUhOVgZtp5txJbqlOrQYEvpxg4wgW9d/RN3xBrzZk1hgd5M5uoixOWPOf5zezZ7t2zjR
      2o6/y2DthmZmzChBaz/CuoP7iPOkMXfaJAmAGBKiD0BiBvctf4Cgv4OafVt4/scrqf76s/z9
      osLzH6c6mTL7Kqb8xdO9RdOZUHTpAxbCTNEHINjOW6//F3sP1dIatLP0K//ItbIQTgxz/ToE
      8owt4u+X3E5WehKKYaDpg3NPJyFiJfq31+4MFpXOIy7UxLu//w8efvCbrNpVH8OhCRF7Ue0B
      fCeqeff9D9m2dRvOUVlUHq7hO489xayJWbEenxAxFdUeoGbHh7yxoYq/Xf4Ijz74v8jJGkXa
      qOQL7xIvxDAT1R5g0sIv8m3PTta/+SveC3ZzuKaeit27SffMIjlRLooRw1dUAXB505hTuoTZ
      C68j4GuhruYwGzduZOeYXMqmXHinSCGGi36dz1YUhcSkVCZPT+XKkrmmrzsRYrANeEGHoiim
      rzsRYrDJu1hhaRIAYWkSAGFpEgBhaRIAYWkSAGFpEgBhaRIAYWkSAGFpEgBhaRIAYWkSAGFp
      EgBhaRIAYWkxC4Cha2jn1HQ0DJ1wOExE05DLCMRQYW6BRwAMWhpq2b1rO52eaXxhYSEYGrs2
      fsjJkJ3uriAzryojKyXe/K6F6KcY7AEMFKeXBQvnEH/2ovmIr576SBpLFpVRNmciByqrZS8g
      hoQY7AFUUtLSIBDo+U7A105icjKqopDoTiLoP4UOGGdLbOu6/lmpdJPLbhuG0dN2bz8zk6Zp
      0Etfhm7unDD4nDmZ21UkEkHppS9N03p59MAZet/bSTfMLY+uRSI9fcUgABdSVRUDzvyn6yiq
      ggKoZ+vOG4aB7ezXtl5q0V8KRVH6bDNi8jWdNlXtvS/F3Dmh9P17MvsqVZvN1uv9AcwuWf55
      20kxeTupNltPX4MSgMS0DDp376d7Sh5tJxtJHpV25tjrnIn1/EJjcKGx2RurT4rSa1+GMYhz
      MrkrpY85mf2iROl7TorJkzp3TuYH4NPy6C0tNLfrrNWamTVnHrMKklj30YfY4jzMnVdserdC
      DIT5AeijPLp7wjTGTDC9NyEuiZwIE5YmARCWJgEQliYBEJYmARCWJgEQliYBEJYmARCW9t+L
      yDpH3x+mOQAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Pay amount vs corridor' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Top 10 Corridor' width='192'>
      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
      3wAAAABJRU5ErkJggg==
    </thumbnail>
  </thumbnails>
</workbook>
